services:
  db:
      container_name: example-db
      image: postgres:16.4
      restart: always
      ports:
        - "5432:5432"
      networks:
        - ticketing
      volumes:
        - ./db-data:/var/lib/postgresql/data
      env_file:
        - ./ticketing-backend/.env
      healthcheck:
        test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
        interval: 5s
        timeout: 5s
        retries: 5
  api:
      container_name: ticketing-api
      build:
        context: ./ticketing-backend
        dockerfile: Dockerfile
      ports:
        - 8080:8080
      networks:
        - ticketing
      depends_on:
        db:
          condition: service_healthy
      env_file:
        - ./ticketing-backend/.env
  ui:
      container_name: ticketing-ui
      build:
        context: ./ticketing-frontend
        dockerfile: Dockerfile
      ports:
        - 80:80
      networks:
        - ticketing
      depends_on:
        db:
          condition: service_healthy
networks:
  ticketing: